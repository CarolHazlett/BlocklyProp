[main]
shiro.loginUrl = /login.jsp

credentialsMatcher = org.apache.shiro.authc.credential.SimpleCredentialsMatcher
allow_all_credentialsMatcher = org.apache.shiro.authc.credential.AllowAllCredentialsMatcher

cloudsessionRealm = com.parallax.server.blocklyprop.security.CloudSessionAuthenticationRealm
cloudsessionRealm.credentialsMatcher = $allow_all_credentialsMatcher

securityManager.realms = $cloudsessionRealm

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

# Configure a SessionDAO and then set it:
sessionDao = com.parallax.server.blocklyprop.security.BlocklyPropSessionDao
securityManager.sessionManager.sessionDAO = $sessionDao
securityManager.sessionManager.sessionIdCookieEnabled = true

# Custom filters
authorizationFilter = com.parallax.server.blocklyprop.security.AuthorizationHeaderFilter
nossl = com.parallax.server.blocklyprop.security.NoSslFilter

#ssl.enabled = false

[urls]
# CDN (data, local during development) (maybe add a hotlink protection?)
/cdn/** = anon

# Regsitration, authentication, password reset
/login.jsp = authc, ssl
/logout = logout, ssl
/register = anon, ssl
/authenticate = anon

/confirmrequest = anon
/confirm = anon
/resetrequest = anon
/reset = anon

# Public pages
/ = anon
/index.jsp = anon
/projects.jsp = anon
/demo/** = anon, nossl
/public/** = anon
/frame/** = anon, nossl

# REST api and api documentation
/apidoc = anon
/rest/shared/** = anon
/rest/** = authcBasic, noSessionCreation, authorizationFilter

# No SSL!
/editor/** = authc, nossl

# Application pages
/** = authc, user
